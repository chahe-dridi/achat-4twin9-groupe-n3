version: '3.8'

services:
  mysql:
    image: mysql:latest
    container_name: mysql-achat
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ashrefbouden
      MYSQL_DATABASE: achatdb
      MYSQL_USER: ashrefbouden
      MYSQL_PASSWORD: ashrefbouden
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --bind-address=0.0.0.0
    networks:
      - achat-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: ashrefbouden/achat-backend-ashrefbouden-4twin9
    container_name: backend-achat
    restart: always
    depends_on:
      - mysql
    ports:
      - "8089:8089"
    volumes:
      - ./logs:/logs
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-achat:3306/achatdb?useUnicode=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ashrefbouden
      SPRING_DATASOURCE_PASSWORD: ashrefbouden
    networks:
      - achat-network

  frontend:
    image: ashrefbouden/achat-frontend-ashrefbouden-4twin9
    container_name: frontend-achat
    ports:
      - "8082:80"
    depends_on:
      - backend
    volumes:
      - ./logs/nginx:/var/log/nginx
    networks:
      - achat-network

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    environment:
      SONAR_JDBC_URL: jdbc:mysql://mysql-achat:3306/sonarqube?useUnicode=true&serverTimezone=UTC
      SONAR_JDBC_USERNAME: ashrefbouden
      SONAR_JDBC_PASSWORD: ashrefbouden
    depends_on:
      - mysql
    networks:
      - achat-network

  nexus:
    image: sonatype/nexus3
    container_name: nexus
    restart: always
    ports:
      - "8081:8081"
    volumes:
      - nexus_data:/nexus-data
    networks:
      - achat-network

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    restart: always
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - achat-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - achat-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - achat-network

volumes:
  mysql_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  nexus_data:
  jenkins_home:
  prometheus_data:
  grafana_data:

networks:
  achat-network:
    driver: bridge