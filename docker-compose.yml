version: '3.8'
services:
  mysql:
    image: mysql:latest
    container_name: mysql-achat
    environment:
      MYSQL_ROOT_PASSWORD: ashrefbouden
      MYSQL_DATABASE: achatdb
      MYSQL_USER: ashrefbouden
      MYSQL_PASSWORD: ashrefbouden
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - achat-network
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: ashrefbouden/achat-backend-ashrefbouden-4twin9
    container_name: backend-achat
    depends_on:
      - mysql
    ports:
      - "8089:8089"
    volumes:
      - backend_logs:/logs
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-achat:3306/achatdb?useUnicode=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ashrefbouden
      SPRING_DATASOURCE_PASSWORD: ashrefbouden
    networks:
      - achat-network
  frontend:
    image: ashrefbouden/achat-frontend-ashrefbouden-4twin9
    container_name: frontend-achat
    ports:
      - "8082:80"
    depends_on:
      - backend
    networks:
      - achat-network
  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube-db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      - sonarqube-db
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - achat-network
  sonarqube-db:
    image: postgres:latest
    container_name: sonarqube-db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonarqube_db_data:/var/lib/postgresql/data
    networks:
      - achat-network
  nexus:
    image: sonatype/nexus3
    container_name: nexus
    ports:
      - "8081:8081"
    volumes:
      - nexus_data:/nexus-data
    networks:
      - achat-network
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - achat-network
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - achat-network
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - achat-network
volumes:
  mysql_data:
  backend_logs:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_db_data:
  nexus_data:
  jenkins_home:
  prometheus_data:
  grafana_data:
networks:
  achat-network:
    driver: bridge
